# DO NOT EDIT: Autogenerated by /Users/micha/dev/docker-composer/src/docker_composer/_utils/generate_class.py
# for Docker Compose version v2.29.7-desktop.1

from typing import List, Optional

import attr

from docker_composer.base import DockerBaseRunner


@attr.s(auto_attribs=True)
class DockerComposeUp(DockerBaseRunner):
    """
    Usage:  docker compose up [OPTIONS] [SERVICE...]
    Create and start containers
    """

    abort_on_container_exit: Optional[bool] = None
    """Stops all containers if any container was stopped. Incompatible with -d"""
    abort_on_container_failure: Optional[bool] = None
    """Stops all containers if any container exited with failure. Incompatible with -d"""
    always_recreate_deps: Optional[bool] = None
    """Recreate dependent containers. Incompatible with --no-recreate."""
    attach: Optional[list] = None
    """Restrict attaching to the specified services. Incompatible with --attach-dependencies."""
    attach_dependencies: Optional[bool] = None
    """Automatically attach to log output of dependent services"""
    build: Optional[bool] = None
    """Build images before starting containers"""
    detach: Optional[bool] = None
    """Detached mode: Run containers in the background"""
    dry_run: Optional[bool] = None
    """Execute command in dry run mode"""
    exit_code_from: Optional[str] = None
    """Return the exit code of the selected service container. Implies --abort-on-container-exit"""
    force_recreate: Optional[bool] = None
    """Recreate containers even if their configuration and image haven't changed"""
    menu: Optional[bool] = None
    """Enable interactive shortcuts when running attached. Incompatible with --detach. Can also be enable/disable by
       setting COMPOSE_MENU environment var."""
    no_attach: Optional[list] = None
    """Do not attach (stream logs) to the specified services"""
    no_build: Optional[bool] = None
    """Don't build an image, even if it's policy"""
    no_color: Optional[bool] = None
    """Produce monochrome output"""
    no_deps: Optional[bool] = None
    """Don't start linked services"""
    no_log_prefix: Optional[bool] = None
    """Don't print prefix in logs"""
    no_recreate: Optional[bool] = None
    """If containers already exist, don't recreate them. Incompatible with --force-recreate."""
    no_start: Optional[bool] = None
    """Don't start the services after creating them"""
    pull: Optional[str] = None
    """Pull image before running ("always"|"missing"|"never") (default "policy")"""
    quiet_pull: Optional[bool] = None
    """Pull without printing progress information"""
    remove_orphans: Optional[bool] = None
    """Remove containers for services not defined in the Compose file"""
    renew_anon_volumes: Optional[bool] = None
    """Recreate anonymous volumes instead of retrieving data from the previous containers"""
    scale: Optional[str] = None
    """Scale SERVICE to NUM instances. Overrides the scale setting in the Compose file if present."""
    timeout: Optional[int] = None
    """Use this timeout in seconds for container shutdown when attached or when containers are already running"""
    timestamps: Optional[bool] = None
    """Show timestamps"""
    wait: Optional[bool] = None
    """Wait for services to be running|healthy. Implies detached mode."""
    wait_timeout: Optional[int] = None
    """Maximum duration to wait for the project to be running|healthy"""
    watch: Optional[bool] = None
    """Watch source code and rebuild/refresh containers when files are updated."""
    _cmd: str = "up"
    _options: List[str] = [
        "abort_on_container_exit",
        "abort_on_container_failure",
        "always_recreate_deps",
        "attach_dependencies",
        "build",
        "detach",
        "dry_run",
        "force_recreate",
        "menu",
        "no_build",
        "no_color",
        "no_deps",
        "no_log_prefix",
        "no_recreate",
        "no_start",
        "quiet_pull",
        "remove_orphans",
        "renew_anon_volumes",
        "timestamps",
        "wait",
        "watch",
    ]
